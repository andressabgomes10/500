#!/bin/bash

echo "üß™ TESTE DE CONFIGURA√á√ÉO PARA PRODU√á√ÉO"
echo ""

echo "1Ô∏è‚É£ Verificando vari√°veis de ambiente necess√°rias:"
echo ""

echo "Backend (.env):"
if [ -f "backend/.env" ]; then
    echo "‚úÖ backend/.env existe"
    grep -E "(MONGO_URL|DB_NAME|WHATSAPP_SERVICE_URL)" backend/.env || echo "‚ùå Vari√°veis faltando"
else
    echo "‚ùå backend/.env n√£o encontrado"
fi

echo ""
echo "WhatsApp Service (.env):"
if [ -f "whatsapp-service/.env" ]; then
    echo "‚úÖ whatsapp-service/.env existe"  
    grep -E "(FASTAPI_URL|PORT)" whatsapp-service/.env || echo "‚ùå Vari√°veis faltando"
else
    echo "‚ùå whatsapp-service/.env n√£o encontrado"
fi

echo ""
echo "Frontend (.env):"
if [ -f "frontend/.env" ]; then
    echo "‚úÖ frontend/.env existe"
    grep -E "REACT_APP_BACKEND_URL" frontend/.env || echo "‚ùå Vari√°vel faltando"
else
    echo "‚ùå frontend/.env n√£o encontrado"
fi

echo ""
echo "2Ô∏è‚É£ Verificando arquivos de configura√ß√£o:"
echo ""

files=("railway.json" "whatsapp-service/railway.json" "vercel.json" "whatsapp-service/Dockerfile" "backend/Dockerfile")
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file existe"
    else
        echo "‚ùå $file n√£o encontrado"
    fi
done

echo ""
echo "3Ô∏è‚É£ Testando conectividade local:"
echo ""

echo "Backend health check:"
curl -s -o /dev/null -w "%{http_code}" "https://f0e174b1-d864-44ae-8d3b-9f46fbcee83c.preview.emergentagent.com/api/whatsapp/status" || echo "‚ùå Backend n√£o responde"

echo ""
echo "WhatsApp service health check:"
curl -s -o /dev/null -w "%{http_code}" "http://localhost:3001/status" || echo "‚ùå WhatsApp service n√£o responde"

echo ""
echo "‚úÖ TESTE CONCLU√çDO!"
echo ""
echo "üìã PR√ìXIMOS PASSOS PARA PRODU√á√ÉO:"
echo "1. Configure as vari√°veis no Railway (veja PRODUCTION-CONFIG.md)"
echo "2. Execute: bash deploy-production.sh"
echo "3. Siga as instru√ß√µes do script"